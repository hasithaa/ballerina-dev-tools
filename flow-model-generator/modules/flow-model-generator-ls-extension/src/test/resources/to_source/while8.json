{
  "description": "Sample diagram node",
  "diagram": {
    "id": "136533",
    "metadata": {
      "label": "While",
      "description": "Loop over a block of code."
    },
    "codedata": {
      "node": "WHILE",
      "lineRange": {
        "fileName": "while.bal",
        "startLine": {
          "line": 105,
          "offset": 8
        },
        "endLine": {
          "line": 117,
          "offset": 9
        }
      }
    },
    "returning": false,
    "branches": [
      {
        "label": "Body",
        "kind": "BLOCK",
        "codedata": {
          "node": "CONDITIONAL",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 105,
              "offset": 24
            },
            "endLine": {
              "line": 117,
              "offset": 9
            }
          }
        },
        "repeatable": "ONE",
        "children": [
          {
            "id": "137339",
            "metadata": {
              "label": "get",
              "description": "The `Client.get()` function can be used to send HTTP GET requests to HTTP endpoints.\n\n"
            },
            "codedata": {
              "node": "ACTION_CALL",
              "org": "ballerina",
              "module": "http",
              "object": "Client",
              "symbol": "get",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 106,
                  "offset": 12
                },
                "endLine": {
                  "line": 106,
                  "offset": 71
                }
              }
            },
            "returning": false,
            "properties": {
              "connection": {
                "metadata": {
                  "label": "Connection",
                  "description": "Connection to use"
                },
                "valueType": "EXPRESSION",
                "value": "foodClient",
                "optional": false,
                "editable": true
              },
              "variable": {
                "metadata": {
                  "label": "Data variable",
                  "description": "Name of the variable"
                },
                "value": "response ",
                "optional": false,
                "editable": true
              },
              "path": {
                "metadata": {
                  "label": "path",
                  "description": "Request path\n"
                },
                "valueType": "EXPRESSION",
                "value": "\"/food/watermelons\"",
                "optional": false,
                "editable": true
              },
              "headers": {
                "metadata": {
                  "label": "headers",
                  "description": "The entity headers\n"
                },
                "valueType": "EXPRESSION",
                "optional": true,
                "editable": true
              },
              "targetType": {
                "metadata": {
                  "label": "targetType",
                  "description": "HTTP response or `anydata`, which is expected to be returned after data binding\n"
                },
                "valueType": "EXPRESSION",
                "optional": true,
                "editable": true
              },
              "type": {
                "metadata": {
                  "label": "Data type",
                  "description": "Type of the variable"
                },
                "value": "json|annotations:error",
                "optional": false,
                "editable": true
              }
            },
            "flags": 0
          },
          {
            "id": "138428",
            "metadata": {
              "label": "If",
              "description": "Add conditional branch to the integration flow."
            },
            "codedata": {
              "node": "IF",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 107,
                  "offset": 12
                },
                "endLine": {
                  "line": 112,
                  "offset": 13
                }
              }
            },
            "returning": false,
            "branches": [
              {
                "label": "Then",
                "kind": "BLOCK",
                "codedata": {
                  "node": "CONDITIONAL",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 107,
                      "offset": 34
                    },
                    "endLine": {
                      "line": 109,
                      "offset": 13
                    }
                  }
                },
                "repeatable": "ONE_OR_MORE",
                "properties": {
                  "condition": {
                    "metadata": {
                      "label": "Condition",
                      "description": "Boolean Condition"
                    },
                    "valueType": "boolean",
                    "value": "(response is json) ",
                    "optional": false,
                    "editable": true
                  }
                },
                "children": [
                  {
                    "id": "139460",
                    "metadata": {
                      "label": "UpdateData",
                      "description": "Update the value of a variable"
                    },
                    "codedata": {
                      "node": "UPDATE_DATA",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 108,
                          "offset": 16
                        },
                        "endLine": {
                          "line": 108,
                          "offset": 84
                        }
                      }
                    },
                    "returning": false,
                    "properties": {
                      "expression": {
                        "metadata": {
                          "label": "Expression",
                          "description": "Expression"
                        },
                        "valueType": "string",
                        "value": "\"Response received from food service: \" + response.toString()",
                        "optional": false,
                        "editable": true
                      },
                      "variable": {
                        "metadata": {
                          "label": "Variable",
                          "description": "Result Variable"
                        },
                        "valueType": "string|()",
                        "value": "msg",
                        "optional": false,
                        "editable": true
                      }
                    },
                    "flags": 0
                  }
                ]
              },
              {
                "label": "Else",
                "kind": "BLOCK",
                "codedata": {
                  "node": "ELSE",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 109,
                      "offset": 14
                    },
                    "endLine": {
                      "line": 112,
                      "offset": 13
                    }
                  }
                },
                "repeatable": "ZERO_OR_ONE",
                "children": [
                  {
                    "id": "141450",
                    "metadata": {
                      "label": "UpdateData",
                      "description": "Update the value of a variable"
                    },
                    "codedata": {
                      "node": "UPDATE_DATA",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 110,
                          "offset": 16
                        },
                        "endLine": {
                          "line": 110,
                          "offset": 90
                        }
                      }
                    },
                    "returning": false,
                    "properties": {
                      "expression": {
                        "metadata": {
                          "label": "Expression",
                          "description": "Expression"
                        },
                        "valueType": "string",
                        "value": "\"Error occurred while invoking food service: \" + response.message()",
                        "optional": false,
                        "editable": true
                      },
                      "variable": {
                        "metadata": {
                          "label": "Variable",
                          "description": "Result Variable"
                        },
                        "valueType": "string|()",
                        "value": "msg",
                        "optional": false,
                        "editable": true
                      }
                    },
                    "flags": 0
                  },
                  {
                    "id": "142377",
                    "metadata": {
                      "label": "Continue",
                      "description": "Skip the current iteration and continue with the next one"
                    },
                    "codedata": {
                      "node": "CONTINUE",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 111,
                          "offset": 16
                        },
                        "endLine": {
                          "line": 111,
                          "offset": 25
                        }
                      }
                    },
                    "returning": false,
                    "flags": 0
                  }
                ]
              }
            ],
            "flags": 0
          },
          {
            "id": "144287",
            "metadata": {
              "label": "If",
              "description": "Add conditional branch to the integration flow."
            },
            "codedata": {
              "node": "IF",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 113,
                  "offset": 12
                },
                "endLine": {
                  "line": 115,
                  "offset": 13
                }
              }
            },
            "returning": false,
            "branches": [
              {
                "label": "Then",
                "kind": "BLOCK",
                "codedata": {
                  "node": "CONDITIONAL",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 113,
                      "offset": 24
                    },
                    "endLine": {
                      "line": 115,
                      "offset": 13
                    }
                  }
                },
                "repeatable": "ONE_OR_MORE",
                "properties": {
                  "condition": {
                    "metadata": {
                      "label": "Condition",
                      "description": "Boolean Condition"
                    },
                    "valueType": "boolean",
                    "value": "(i == 3) ",
                    "optional": false,
                    "editable": true
                  }
                },
                "children": [
                  {
                    "id": "145350",
                    "metadata": {
                      "label": "Break",
                      "description": "Exit the current loop"
                    },
                    "codedata": {
                      "node": "BREAK",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 114,
                          "offset": 16
                        },
                        "endLine": {
                          "line": 114,
                          "offset": 22
                        }
                      }
                    },
                    "returning": false,
                    "flags": 0
                  }
                ]
              }
            ],
            "flags": 0
          },
          {
            "id": "147207",
            "metadata": {
              "label": "Custom Expression",
              "description": "Represents a custom Ballerina expression"
            },
            "codedata": {
              "node": "EXPRESSION",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 116,
                  "offset": 12
                },
                "endLine": {
                  "line": 116,
                  "offset": 19
                }
              }
            },
            "returning": false,
            "properties": {
              "statement": {
                "metadata": {
                  "label": "Statement",
                  "description": "Ballerina statement"
                },
                "value": "            i += 1;\n",
                "optional": false,
                "editable": true
              }
            },
            "flags": 0
          }
        ]
      }
    ],
    "properties": {
      "condition": {
        "metadata": {
          "label": "Condition",
          "description": "Boolean Condition"
        },
        "valueType": "boolean",
        "value": "i < count ",
        "optional": false,
        "editable": true
      }
    },
    "flags": 0
  },
  "output": [
    {
      "range": {
        "start": {
          "line": 105,
          "character": 8
        },
        "end": {
          "line": 117,
          "character": 9
        }
      },
      "newText": "while i < count {\n    json|annotations: error response = foodClient->get(\"/food/watermelons\");\n    if (response is json) {\n        msg = \"Response received from food service: \" + response.toString();\n    }\n    else {\n        msg = \"Error occurred while invoking food service: \" + response.message();\n        continue;\n    }\n    if (i == 3) {\n        break;\n    }\n    i += 1;\n; }"
    }
  ]
}
